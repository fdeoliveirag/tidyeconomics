[
  {
    "path": "posts/2021-02-20-desmistificando-o-sidra-parte-i/",
    "title": "Desmistificando o SIDRA - Parte I",
    "description": "Calculando e visualizando o acumulado dos componentes da inflação durante a pandemia no Brasil.",
    "author": [
      {
        "name": "Felipe O. Gonçalves",
        "url": {}
      }
    ],
    "date": "2021-02-20",
    "categories": [
      "inflação",
      "ibge",
      "dplyr",
      "purrr",
      "forcats",
      "ggplot2"
    ],
    "contents": "\n\nbody{\n  font-size: 14pt;\n  text-align: justify;\n}\ntd{font-size: 16px;}\ncode.r{font-size: 14px;}\npre{font-size: 12px;}\nPara quem ainda não lida com dados do IBGE de maneira sistemática, dificuldades com o SIDRA não são algo incomum. Importar as planilhas sob um formato amigável para trabalho analítico (e futuras estimações) pode trazer dor de cabeça.\nEste blog estreia com a primeira parte de uma sequência de postagens — gradativa em complexidade — que tentará atenuar essa dificuldade oferecendo um workflow consistente desde a coleta até a visualização dos dados do SIDRA.\nNa postagem de hoje, a variação mensal do IPCA desagregada em grupos será usada para a construção de um gráfico sobre a composição da inflação acumulada no Brasil durante a pandemia.\nPacotes\n\n\nlibrary(sidrar)    # importação via API\nlibrary(ggthemes)  # estética do gráfico\n#\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(forcats)\nlibrary(ggplot2)\n\n\n\n\nDados\nNão será preciso baixar nenhum arquivo. Seguindo os passos abaixo, encontra-se a expressão que permitirá levar os dados direto para o R:\nAcessar o portal do SIDRA\nIPCA > Relação de Tabelas > 7061\nDefinir opções:\nVariável: variação mensal (%)\nGeral, grupo, subgrupo, item e subitem: 9 componentes\nMês: mar/2020 a jan/2021\nUnidade Territorial: Brasil\n\nArrastar os blocos até ficarem dispostos assim:\n\nMenu Inferior Direito: Links de Compartilhar > Parâmetros para a API \nFeito. Cria-se então um objeto com a expressão — retirando a parte anterior a \"/t/7061/\":\n\n\nt7061 <- \"/t/7061/n1/all/v/306/p/last%2011/c315/7170,7445,7486,7558,7625,7660,7712,7766,7786/d/v306%202\"\n\n\n\nTorna-se assim possível, com o providencial {sidrar}, coletar os dados usando apenas o objeto criado:\n\n\ndf_ibge <- sidrar::get_sidra(api = t7061)\nnames(df_ibge)\n\n\n [1] \"Nível Territorial (Código)\"                     \n [2] \"Nível Territorial\"                              \n [3] \"Brasil (Código)\"                                \n [4] \"Brasil\"                                         \n [5] \"Variável (Código)\"                              \n [6] \"Variável\"                                       \n [7] \"Mês (Código)\"                                   \n [8] \"Mês\"                                            \n [9] \"Geral, grupo, subgrupo, item e subitem (Código)\"\n[10] \"Geral, grupo, subgrupo, item e subitem\"         \n[11] \"Unidade de Medida (Código)\"                     \n[12] \"Unidade de Medida\"                              \n[13] \"Valor\"                                          \n\nManipulação\nDessas treze colunas, são três as necessárias aqui:\n\n\nipca <- df_ibge %>%\n  as_tibble() %>%  # início do flow\n  select(\n    date = \"Mês\",\n    component = \"Geral, grupo, subgrupo, item e subitem\",\n    mth_inflation = \"Valor\"\n  )\nhead(ipca, 9)\n\n\n# A tibble: 9 x 3\n  date       component                   mth_inflation\n  <chr>      <chr>                               <dbl>\n1 março 2020 1.Alimentação e bebidas              0.84\n2 março 2020 2.Habitação                          0.13\n3 março 2020 3.Artigos de residência             -1.08\n4 março 2020 4.Vestuário                          0.21\n5 março 2020 5.Transportes                       -0.9 \n6 março 2020 6.Saúde e cuidados pessoais          0.21\n7 março 2020 7.Despesas pessoais                 -0.23\n8 março 2020 8.Educação                           0.59\n9 março 2020 9.Comunicação                        0.04\n\nOs dados vêm num padrão “comprido” ao invés de “largo”: não há uma coluna para cada componente — o que faz com que se tenha nove observações para cada mês. Diante da finalidade desta postagem, o ideal é mantê-los assim. Também não será necessário transformar a coluna de meses (de <chr> para <Date> ou <yearmon>).\nÉ preciso agora calcular o acumulado para onze meses de pandemia dos componentes do IPCA. Diante de uma variação mensal inicial \\(\\pi_0 = \\pi_0^{ac}\\), temos\n\\[\\pi_t^{ac} = (1\\ +\\ \\frac{\\pi_t}{100})\\ \\times\\ \\pi_{t-1}^{ac}\\ +\\ \\pi_t\\ ,\\]\numa variável criada a partir de seus próprios valores defasados. Essa atribuição recursiva requer a função purrr::accumulate() para ser realizada dentro do flow — em parceria com dplyr::group_by() para ser aplicada a cada componente em separado:\n\n\nipca <- ipca %>%\n  group_by(component) %>%         # agrupamento\n  mutate(\n    # .y\n    accum_inflation = accumulate(\n      mth_inflation,              # .x\n      ~ (1 + .x / 100) * .y + .x  # atribuição recursiva de .y\n    )\n  )\n\n\n\nConferindo o primeiro componente — e mais importante do período:\n\n\nhead(arrange(ipca, component), 11)\n\n\n# A tibble: 11 x 4\n# Groups:   component [1]\n   date          component               mth_inflation accum_inflation\n   <chr>         <chr>                           <dbl>           <dbl>\n 1 março 2020    1.Alimentação e bebidas          0.84            0.84\n 2 abril 2020    1.Alimentação e bebidas          1.57            2.42\n 3 maio 2020     1.Alimentação e bebidas          0.33            2.76\n 4 junho 2020    1.Alimentação e bebidas          0.64            3.42\n 5 julho 2020    1.Alimentação e bebidas          0.42            3.85\n 6 agosto 2020   1.Alimentação e bebidas          1.17            5.07\n 7 setembro 2020 1.Alimentação e bebidas          2.54            7.74\n 8 outubro 2020  1.Alimentação e bebidas          1.9             9.78\n 9 novembro 2020 1.Alimentação e bebidas          2.28           12.3 \n10 dezembro 2020 1.Alimentação e bebidas          1.37           13.8 \n11 janeiro 2021  1.Alimentação e bebidas          0.68           14.6 \n\nFinalmente, chega-se ao valor acumulado no final no período para todos os componentes:\n\n\nipca <- ipca %>%\n  summarize(\n    accum_inflation = last(accum_inflation),  # jan/2021\n    .groups = \"drop\"                          # desagrupamento\n  )\n\n\n\nE eis a matéria-prima do gráfico:\n\n\narrange(ipca, desc(accum_inflation))\n\n\n# A tibble: 9 x 2\n  component                   accum_inflation\n  <chr>                                 <dbl>\n1 1.Alimentação e bebidas             14.6   \n2 3.Artigos de residência              7.07  \n3 2.Habitação                          3.98  \n4 9.Comunicação                        3.11  \n5 6.Saúde e cuidados pessoais          1.41  \n6 5.Transportes                        1.36  \n7 7.Despesas pessoais                  0.749 \n8 4.Vestuário                          0.0240\n9 8.Educação                          -2.50  \n\nVisualização\nO primeiro passo para o sucesso do gráfico de barras será, seguindo o embalo da formatação (categorias sem numeração e mais concisas), reordenar a sequência de componentes com forcats::fct_reorder() de acordo com o tamanho da inflação acumulada:\n\n\nipca <- ipca %>%\n  mutate(\n    component = component %>%\n      substring(3) %>%                                    # partindo do 3o. caractere\n      recode(\"Alimentação e bebidas\" = \"Alimentação\",\n             \"Artigos de residência\" = \"Residência\",\n             \"Saúde e cuidados pessoais\" = \"Saúde\",\n             \"Despesas pessoais\" = \"Desp. Pessoais\") %>%  # concisão das categorias\n      fct_reorder(accum_inflation)                        # critério de ordenação\n  )\n\n\n\nA carcaça do gráfico já pode ser criada:\n\n\nipca %>%\n  ggplot(aes(accum_inflation, component)) +\n  geom_col()\n\n\n\n\nE é pouco apelativa. O segundo passo será desfrutar das possibilidades que o flow fornece para montagens em cima dessa carcaça — a função ggplot2::geom_label(), por exemplo. Esmiuçá-las exigiria uma postagem à parte.\nO último passo é escolher tema e paleta de cores a gosto. No caso do gráfico resultante abaixo, adotou-se um padrão do Wall Street Journal encontrado no {ggthemes}:\n\n\n\nUm senhor ganho de apelo estético.\nConsiderações finais\nA inspiração para esta postagem veio justamente de matérias jornalísticas sobre a trajetória recente da inflação de alimentos. Uma boa fonte para a discussão do tema são as avaliações do IPEA a respeito.\nOlhando para a deflação dos serviços educacionais, deve-se ter em conta fevereiro como único mês ausente no período da pandemia (e que é particularmente importante para o componente).\nNa segunda parte da sequência, será possível trabalhar com planilhas mais complexas do SIDRA.\n\n\n\n",
    "preview": "posts/2021-02-20-desmistificando-o-sidra-parte-i/desmistificando-o-sidra-parte-i_files/figure-html5/unnamed-chunk-12-1.png",
    "last_modified": "2021-02-20T23:09:47-03:00",
    "input_file": "desmistificando-o-sidra-parte-i.utf8.md"
  }
]
